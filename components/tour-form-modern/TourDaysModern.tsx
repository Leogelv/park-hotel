'use client'

import { useFormContext, useFieldArray } from 'react-hook-form'
import { Plus, X, Upload, ChevronDown, ChevronUp } from 'lucide-react'
import { useState } from 'react'
import { useMutation } from 'convex/react'
import { api } from '@/convex/_generated/api'
import { Id } from '@/convex/_generated/dataModel'
import { typography, forms } from '@/hooks/useDesignTokens'
import { TourFormData, createDefaultActivity } from '@/lib/tour-form-schema'

interface TourDaysModernProps {
  tourId?: string
}

export default function TourDaysModern({ tourId }: TourDaysModernProps) {
  const {
    control,
    formState: { errors },
    register,
    watch,
    trigger,
    setValue,
    getValues,
  } = useFormContext<TourFormData>()

  // –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–∞—Å—Å–∏–≤–æ–º –¥–Ω–µ–π
  const { fields: dayFields, append: appendDay, remove: removeDay } = useFieldArray({
    control,
    name: 'days',
  })

  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —Å–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏—è –¥–Ω–µ–π
  const [collapsedDays, setCollapsedDays] = useState<Set<number>>(new Set())

  // –ú—É—Ç–∞—Ü–∏—è –¥–ª—è –∞–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
  const updateTourDraft = useMutation(api.tours.updateTourDraft)

  // –ê–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–Ω–µ–π
  const handleDaysBlur = async () => {
    if (!tourId) return
    
    const isValid = await trigger('days')
    if (!isValid) return

    // –î–Ω–∏ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø—Ä–∏ —Ñ–∏–Ω–∞–ª—å–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–æ—Ä–º—ã
    // —Ç–∞–∫ –∫–∞–∫ —Ç—Ä–µ–±—É—é—Ç —Å–ª–æ–∂–Ω–æ–π –ª–æ–≥–∏–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤ –æ—Ç–¥–µ–ª—å–Ω—ã—Ö —Ç–∞–±–ª–∏—Ü–∞—Ö
    console.log('üìù –î–Ω–∏ –±—É–¥—É—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–æ—Ä–º—ã')
  }

  // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –¥–Ω—è
  const addDay = () => {
    appendDay({
      day_number: dayFields.length + 1,
      activities: [createDefaultActivity(1)],
    })
  }

  // –£–¥–∞–ª–µ–Ω–∏–µ –¥–Ω—è
  const removeDayHandler = (dayIndex: number) => {
    removeDay(dayIndex)
    // react-hook-form –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ–∏–Ω–¥–µ–∫—Å–∏—Ä—É–µ—Ç –º–∞—Å—Å–∏–≤
    // –ù–æ–º–µ—Ä–∞ –¥–Ω–µ–π –º–æ–∂–Ω–æ –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å –∫–∞–∫ dayIndex + 1 –≤ UI
    setTimeout(handleDaysBlur, 100)
  }

  // –≠—Ç–∏ —Ñ—É–Ω–∫—Ü–∏–∏ –±–æ–ª—å—à–µ –Ω–µ –Ω—É–∂–Ω—ã - DayContent –±—É–¥–µ—Ç —É–ø—Ä–∞–≤–ª—è—Ç—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—è–º–∏ —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ

  // –°–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏–µ/—Ä–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏–µ –¥–Ω—è
  const toggleDayCollapse = (dayIndex: number) => {
    const newCollapsed = new Set(collapsedDays)
    if (newCollapsed.has(dayIndex)) {
      newCollapsed.delete(dayIndex)
    } else {
      newCollapsed.add(dayIndex)
    }
    setCollapsedDays(newCollapsed)
  }

  return (
    <div className="space-y-6">
      <div className="flex items-center justify-between">
        <h3 className={typography.heading.section}>
          –ü—Ä–æ–≥—Ä–∞–º–º–∞ —Ç—É—Ä–∞ –ø–æ –¥–Ω—è–º
        </h3>
        <button
          type="button"
          onClick={addDay}
          className="flex items-center gap-2 px-4 py-2 bg-primary text-white rounded-xl hover:bg-primary-dark transition-colors"
        >
          <Plus className="w-4 h-4" />
          –î–æ–±–∞–≤–∏—Ç—å –¥–µ–Ω—å
        </button>
      </div>

      {dayFields.length === 0 ? (
        <div className="text-center py-12 bg-neutral-50 rounded-xl">
          <p className="text-neutral-600 mb-4">
            –ü—Ä–æ–≥—Ä–∞–º–º–∞ —Ç—É—Ä–∞ –Ω–µ —Å–æ—Å—Ç–∞–≤–ª–µ–Ω–∞. –î–æ–±–∞–≤—å—Ç–µ –ø–µ—Ä–≤—ã–π –¥–µ–Ω—å —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å.
          </p>
          <button
            type="button"
            onClick={addDay}
            className="px-6 py-3 bg-primary text-white rounded-xl hover:bg-primary-dark transition-colors"
          >
            –î–æ–±–∞–≤–∏—Ç—å –ø–µ—Ä–≤—ã–π –¥–µ–Ω—å
          </button>
        </div>
      ) : (
        <div className="space-y-6">
          {dayFields.map((dayField, dayIndex) => {
            const isCollapsed = collapsedDays.has(dayIndex)
            const dayErrors = errors.days?.[dayIndex]
            
            return (
              <div 
                key={dayField.id} 
                className="bg-white border border-neutral-200 rounded-2xl overflow-hidden"
              >
                {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –¥–Ω—è */}
                <div className="bg-neutral-50 px-6 py-4 border-b border-neutral-200">
                  <div className="flex items-center justify-between">
                    <div className="flex items-center gap-4">
                      <button
                        type="button"
                        onClick={() => toggleDayCollapse(dayIndex)}
                        className="p-1 hover:bg-white rounded-lg transition-colors"
                      >
                        {isCollapsed ? (
                          <ChevronDown className="w-5 h-5" />
                        ) : (
                          <ChevronUp className="w-5 h-5" />
                        )}
                      </button>
                      <h4 className={typography.heading.subsection}>
                        –î–µ–Ω—å {dayIndex + 1}
                      </h4>
                      {dayErrors && (
                        <div className="w-2 h-2 bg-red-500 rounded-full" title="–ï—Å—Ç—å –æ—à–∏–±–∫–∏" />
                      )}
                    </div>
                    <button
                      type="button"
                      onClick={() => removeDayHandler(dayIndex)}
                      className="p-2 text-red-500 hover:bg-red-50 rounded-lg transition-colors"
                      title="–£–¥–∞–ª–∏—Ç—å –¥–µ–Ω—å"
                    >
                      <X className="w-5 h-5" />
                    </button>
                  </div>
                </div>

                {/* –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –¥–Ω—è */}
                {!isCollapsed && (
                  <div className="p-6 space-y-6">
                    {/* –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–Ω—è */}
                    <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
                      <div>
                        <label className={typography.body.small + " block font-medium mb-2"}>
                          –†–∞–∑–º–µ—â–µ–Ω–∏–µ
                        </label>
                        <input
                          {...register(`days.${dayIndex}.accommodation` as const)}
                          onBlur={handleDaysBlur}
                          placeholder="–ù–∞–∑–≤–∞–Ω–∏–µ –æ—Ç–µ–ª—è/–±–∞–∑—ã –æ—Ç–¥—ã—Ö–∞"
                          className={
                            "w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-primary focus:border-transparent " +
                            forms.input +
                            (dayErrors?.accommodation ? ' border-red-500' : ' border-neutral-200')
                          }
                        />
                        {dayErrors?.accommodation && (
                          <p className="mt-1 text-sm text-red-600">
                            {typeof dayErrors.accommodation === 'object' && 'message' in dayErrors.accommodation
                              ? dayErrors.accommodation.message
                              : '–û—à–∏–±–∫–∞ –≤ –ø–æ–ª–µ —Ä–∞–∑–º–µ—â–µ–Ω–∏—è'
                            }
                          </p>
                        )}
                      </div>
                      
                      <div>
                        <label className={typography.body.small + " block font-medium mb-2"}>
                          –ê–≤—Ç–æ–ø–µ—Ä–µ–µ–∑–¥ (–∫–º)
                        </label>
                        <input
                          type="number"
                          {...register(`days.${dayIndex}.auto_distance_km` as const, { valueAsNumber: true })}
                          onBlur={handleDaysBlur}
                          placeholder="0"
                          className={
                            "w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-primary focus:border-transparent " +
                            forms.input +
                            (dayErrors?.auto_distance_km ? ' border-red-500' : ' border-neutral-200')
                          }
                        />
                        {dayErrors?.auto_distance_km && (
                          <p className="mt-1 text-sm text-red-600">
                            {typeof dayErrors.auto_distance_km === 'object' && 'message' in dayErrors.auto_distance_km
                              ? dayErrors.auto_distance_km.message
                              : '–û—à–∏–±–∫–∞ –≤ –ø–æ–ª–µ –∞–≤—Ç–æ–ø–µ—Ä–µ–µ–∑–¥–∞'
                            }
                          </p>
                        )}
                      </div>
                      
                      <div>
                        <label className={typography.body.small + " block font-medium mb-2"}>
                          –ü–µ—à–∏–µ –ø–µ—Ä–µ—Ö–æ–¥—ã (–∫–º)
                        </label>
                        <input
                          type="number"
                          {...register(`days.${dayIndex}.walk_distance_km` as const, { valueAsNumber: true })}
                          onBlur={handleDaysBlur}
                          placeholder="0"
                          className={
                            "w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-primary focus:border-transparent " +
                            forms.input +
                            (dayErrors?.walk_distance_km ? ' border-red-500' : ' border-neutral-200')
                          }
                        />
                        {dayErrors?.walk_distance_km && (
                          <p className="mt-1 text-sm text-red-600">
                            {typeof dayErrors.walk_distance_km === 'object' && 'message' in dayErrors.walk_distance_km
                              ? dayErrors.walk_distance_km.message
                              : '–û—à–∏–±–∫–∞ –≤ –ø–æ–ª–µ –ø–µ—à–∏—Ö –ø–µ—Ä–µ—Ö–æ–¥–æ–≤'
                            }
                          </p>
                        )}
                      </div>
                    </div>

                    {/* –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –¥–Ω—è - —É–ø—Ä–∞–≤–ª—è—é—Ç—Å—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–º DayContent */}
                    <DayContent dayIndex={dayIndex} onBlur={handleDaysBlur} />
                  </div>
                )}
              </div>
            )
          })}
        </div>
      )}

      {/* –û–±—â–∞—è –æ—à–∏–±–∫–∞ –º–∞—Å—Å–∏–≤–∞ –¥–Ω–µ–π */}
      {errors.days && typeof errors.days === 'object' && 'message' in errors.days && (
        <p className="text-sm text-red-600">
          {typeof errors.days.message === 'string' ? errors.days.message : '–û—à–∏–±–∫–∞ –≤ –ø—Ä–æ–≥—Ä–∞–º–º–µ —Ç—É—Ä–∞'}
        </p>
      )}
    </div>
  )
}

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –¥–Ω—è (–ø–æ–ª—è –¥–Ω—è + –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏)
interface DayContentProps {
  dayIndex: number
  onBlur: () => void
}

function DayContent({ dayIndex, onBlur }: DayContentProps) {
  const {
    control,
    register,
    formState: { errors },
  } = useFormContext<TourFormData>()

  // –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—è–º–∏ —ç—Ç–æ–≥–æ –¥–Ω—è —á–µ—Ä–µ–∑ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π useFieldArray
  const { fields: activityFields, append: appendActivity, remove: removeActivity } = useFieldArray({
    control,
    name: `days.${dayIndex}.activities`,
  })

  const dayErrors = errors.days?.[dayIndex]

  // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∫ —ç—Ç–æ–º—É –¥–Ω—é
  const addActivityToDay = () => {
    const newOrderNumber = activityFields.length + 1
    const newActivity = createDefaultActivity(newOrderNumber)
    appendActivity(newActivity)
  }

  return (
    <div>
      <h5 className="font-medium mb-4">–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –¥–Ω—è</h5>
      
      {/* –ö–Ω–æ–ø–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ */}
      <div className="flex justify-between items-center mb-4">
        <div></div>
        <button
          type="button"
          onClick={addActivityToDay}
          className="flex items-center gap-2 px-3 py-1 text-sm bg-primary text-white rounded-lg hover:bg-primary-dark transition-colors"
        >
          <Plus className="w-4 h-4" />
          –î–æ–±–∞–≤–∏—Ç—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
        </button>
      </div>

      {/* –°–ø–∏—Å–æ–∫ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π */}
      <div className="space-y-4">
        {activityFields.map((activityField, activityIndex) => {
          const activityErrors = dayErrors?.activities?.[activityIndex]
          
          return (
            <div key={activityField.id} className="bg-neutral-50 rounded-xl p-4">
              <div className="flex items-start justify-between mb-4">
                <h6 className="font-medium text-sm">
                  –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å {activityIndex + 1}
                </h6>
                <button
                  type="button"
                  onClick={() => removeActivity(activityIndex)}
                  className="p-1 text-red-500 hover:bg-red-100 rounded transition-colors"
                  title="–£–¥–∞–ª–∏—Ç—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å"
                >
                  <X className="w-4 h-4" />
                </button>
              </div>

              <div className="grid grid-cols-1 md:grid-cols-2 gap-4 mb-4">
                <div>
                  <label className="block text-sm font-medium mb-1">–ù–∞–∑–≤–∞–Ω–∏–µ *</label>
                  <input
                    {...register(`days.${dayIndex}.activities.${activityIndex}.name` as const)}
                    onBlur={onBlur}
                    placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –≠–∫—Å–∫—É—Ä—Å–∏—è –∫ –≤–æ–¥–æ–ø–∞–¥—É"
                    className={
                      "w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-primary focus:border-transparent " +
                      forms.input +
                      (activityErrors?.name ? ' border-red-500' : ' border-neutral-200')
                    }
                  />
                  {activityErrors?.name && (
                    <p className="mt-1 text-sm text-red-600">
                      {typeof activityErrors.name === 'object' && 'message' in activityErrors.name
                        ? activityErrors.name.message
                        : '–ù–∞–∑–≤–∞–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ'
                      }
                    </p>
                  )}
                </div>

                <div>
                  <label className="block text-sm font-medium mb-1">–¢–∏–ø *</label>
                  <select
                    {...register(`days.${dayIndex}.activities.${activityIndex}.type` as const)}
                    onBlur={onBlur}
                    className={
                      "w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-primary focus:border-transparent " +
                      forms.input +
                      (activityErrors?.type ? ' border-red-500' : ' border-neutral-200')
                    }
                  >
                    <option value="—ç–∫—Å–∫—É—Ä—Å–∏—è">–≠–∫—Å–∫—É—Ä—Å–∏—è</option>
                    <option value="—Ç—Ä–∞–Ω—Å—Ñ–µ—Ä">–¢—Ä–∞–Ω—Å—Ñ–µ—Ä</option>
                    <option value="–ø–∏—Ç–∞–Ω–∏–µ">–ü–∏—Ç–∞–Ω–∏–µ</option>
                    <option value="–æ—Ç–¥—ã—Ö">–û—Ç–¥—ã—Ö</option>
                    <option value="–≤–µ—á–µ—Ä–Ω–µ–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ">–í–µ—á–µ—Ä–Ω–µ–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ</option>
                  </select>
                  {activityErrors?.type && (
                    <p className="mt-1 text-sm text-red-600">
                      {typeof activityErrors.type === 'object' && 'message' in activityErrors.type 
                        ? activityErrors.type.message 
                        : '–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏'
                      }
                    </p>
                  )}
                </div>
              </div>

              <div>
                <label className="block text-sm font-medium mb-1">–û–ø–∏—Å–∞–Ω–∏–µ *</label>
                <textarea
                  {...register(`days.${dayIndex}.activities.${activityIndex}.description` as const)}
                  onBlur={onBlur}
                  placeholder="–ü–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏..."
                  rows={2}
                  className={
                    "w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-primary focus:border-transparent " +
                    forms.input +
                    (activityErrors?.description ? ' border-red-500' : ' border-neutral-200')
                  }
                />
                {activityErrors?.description && (
                  <p className="mt-1 text-sm text-red-600">
                    {typeof activityErrors.description === 'object' && 'message' in activityErrors.description
                      ? activityErrors.description.message
                      : '–û–ø–∏—Å–∞–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ'
                    }
                  </p>
                )}
              </div>

              <div className="grid grid-cols-2 md:grid-cols-4 gap-4 mt-4">
                <div>
                  <label className="block text-sm font-medium mb-1">–í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞</label>
                  <input
                    type="time"
                    {...register(`days.${dayIndex}.activities.${activityIndex}.time_start` as const)}
                    onBlur={onBlur}
                    className={
                      "w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-primary focus:border-transparent " +
                      forms.input +
                      ' border-neutral-200'
                    }
                  />
                </div>

                <div>
                  <label className="block text-sm font-medium mb-1">–í—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è</label>
                  <input
                    type="time"
                    {...register(`days.${dayIndex}.activities.${activityIndex}.time_end` as const)}
                    onBlur={onBlur}
                    className={
                      "w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-primary focus:border-transparent " +
                      forms.input +
                      ' border-neutral-200'
                    }
                  />
                </div>

                <div>
                  <label className="block text-sm font-medium mb-1">–¶–µ–Ω–∞ (‚ÇΩ)</label>
                  <input
                    type="number"
                    {...register(`days.${dayIndex}.activities.${activityIndex}.price` as const, { valueAsNumber: true })}
                    onBlur={onBlur}
                    placeholder="0"
                    className={
                      "w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-primary focus:border-transparent " +
                      forms.input +
                      (activityErrors?.price ? ' border-red-500' : ' border-neutral-200')
                    }
                  />
                  {activityErrors?.price && (
                    <p className="mt-1 text-sm text-red-600">
                      {typeof activityErrors.price === 'object' && 'message' in activityErrors.price
                        ? activityErrors.price.message
                        : '–¶–µ–Ω–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–π'
                      }
                    </p>
                  )}
                </div>

                <div>
                  <label className="block text-sm font-medium mb-1">–í–∫–ª—é—á–µ–Ω–æ</label>
                  <select
                    {...register(`days.${dayIndex}.activities.${activityIndex}.is_included` as const)}
                    onBlur={onBlur}
                    className={
                      "w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-primary focus:border-transparent " +
                      forms.input +
                      ' border-neutral-200'
                    }
                  >
                    <option value="true">–î–∞, –≤–∫–ª—é—á–µ–Ω–æ</option>
                    <option value="false">–î–æ–ø–ª–∞—Ç–∞</option>
                  </select>
                </div>
              </div>
            </div>
          )
        })}
      </div>
    </div>
  )
}