'use client'

import { useState, useEffect, useRef, useCallback } from 'react'
import { useRouter } from 'next/navigation'
import { Save, X, Loader2 } from 'lucide-react'
import { useQuery, useMutation } from 'convex/react'
import { api } from '@/convex/_generated/api'
import { Id } from '@/convex/_generated/dataModel'
import { useFileUrl } from '@/hooks/useConvex'
import { useDebounce } from '@/hooks/useDebounce'
import { typography, spacing, forms } from '@/hooks/useDesignTokens'

// –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–æ–≤—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
import TourBasicInfo from './tour-form-convex/TourBasicInfo'
import TourExtras from './tour-form-convex/TourExtras'
import TourDays from './tour-form-convex/TourDays'

interface TourFormProps {
  tourId?: string
}

interface TourDay {
  _id?: Id<"tour_days">
  day_number: number
  accommodation?: string
  auto_distance_km?: number
  walk_distance_km?: number
  activities: Activity[]
}

interface Activity {
  _id?: Id<"activities">
  name: string
  description: string
  image?: string
  image_url?: string
  type: string
  time_start?: string
  time_end?: string
  price?: number
  order_number: number
  is_included: boolean
}

interface ExtraService {
  name: string
  price?: number
}

export default function TourFormConvex({ tourId }: TourFormProps) {
  // –õ–æ–≥–∏ —É–±—Ä–∞–Ω—ã
  
  const router = useRouter()
  const fileInputRef = useRef<HTMLInputElement>(null)
  const activityFileInputRefs = useRef<{ [key: string]: HTMLInputElement }>({})
  
  const [loading, setLoading] = useState(false)
  const [uploading, setUploading] = useState(false)
  const [uploadingActivity, setUploadingActivity] = useState<string | null>(null)
  
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ —Ñ–æ—Ä–º—ã
  const [formData, setFormData] = useState({
    title: '',
    region: '',
    description: '',
    price: 0,
    discount_percent: 0,
    duration_days: 1,
    max_participants: 10,
    difficulty_level: '–ª–µ–≥–∫–∏–π',
    is_active: true
  })
  
  const [mainImage, setMainImage] = useState<string | null>(null)
  const [days, setDays] = useState<TourDay[]>([])
  const [includedServices, setIncludedServices] = useState<string[]>([])
  const [extraServices, setExtraServices] = useState<ExtraService[]>([])
  const [selectedActivityImages, setSelectedActivityImages] = useState<{ [key: string]: File }>({})
  const [autoSaving, setAutoSaving] = useState(false)
  
  // –î–æ–±–∞–≤–ª—è–µ–º debounce –¥–ª—è –¥–Ω–µ–π —á—Ç–æ–±—ã –Ω–µ —Å–æ—Ö—Ä–∞–Ω—è—Ç—å –ø—Ä–∏ –∫–∞–∂–¥–æ–º –Ω–∞–∂–∞—Ç–∏–∏ –∫–ª–∞–≤–∏—à–∏
  const debouncedDays = useDebounce(days, 2000) // 2 —Å–µ–∫—É–Ω–¥—ã –∑–∞–¥–µ—Ä–∂–∫–∏
  
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π
  const [initialFormData, setInitialFormData] = useState(formData)
  const [hasChanges, setHasChanges] = useState(false)
  
  // –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö —Ç—É—Ä–∞ —Å –¥–µ—Ç–∞–ª—è–º–∏ (–¥–Ω–∏ –∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏)
  const tour = useQuery(api.tours.getTourWithDetails, 
    tourId ? { tourId: tourId as Id<"tours"> } : "skip"
  )
  
  // –ú—É—Ç–∞—Ü–∏–∏
  const createTour = useMutation(api.tours.createTour)
  const updateTour = useMutation(api.tours.updateTour)
  const updateTourDraft = useMutation(api.tours.updateTourDraft)
  const generateUploadUrl = useMutation(api.files.generateUploadUrl)
  
  // –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
  useEffect(() => {
    if (tour) {
      setFormData({
        title: tour.title,
        region: tour.region || '',
        description: tour.description || '',
        price: tour.price,
        discount_percent: tour.discount_percent || 0,
        duration_days: tour.duration_days,
        max_participants: tour.max_participants || 10,
        difficulty_level: tour.difficulty_level || '–ª–µ–≥–∫–∏–π',
        is_active: tour.is_active !== false
      })
      
      setMainImage(tour.main_image || null)
      
      // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–Ω–∏ —Å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—è–º–∏
      if (tour.days) {
        setDays(tour.days.map((day: any) => ({
          ...day,
          activities: day.activities || []
        })))
      }
      
      // –ó–∞–≥—Ä—É–∂–∞–µ–º —É—Å–ª—É–≥–∏
      if (tour.included_services) {
        setIncludedServices(tour.included_services)
      }
      
      // –ó–∞–≥—Ä—É–∂–∞–µ–º extra_services (—É—Å–ª—É–≥–∏ –ù–ï –≤–∫–ª—é—á–µ–Ω–Ω—ã–µ –≤ —Å—Ç–æ–∏–º–æ—Å—Ç—å)
      if (tour.extra_services) {
        console.log('üî• –ó–∞–≥—Ä—É–∂–∞–µ–º extra_services –∏–∑ –ë–î:', tour.extra_services)
        setExtraServices(tour.extra_services)
      } else {
        setExtraServices([])
      }
      
      // –ó–∞–ø–æ–º–∏–Ω–∞–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
      setInitialFormData({
        title: tour.title,
        region: tour.region || '',
        description: tour.description || '',
        price: tour.price,
        discount_percent: tour.discount_percent || 0,
        duration_days: tour.duration_days,
        max_participants: tour.max_participants || 10,
        difficulty_level: tour.difficulty_level || '–ª–µ–≥–∫–∏–π',
        is_active: tour.is_active !== false
      })
    }
  }, [tour])
  
  // –ü–∞–∫–µ—Ç–Ω–æ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π —Ñ–æ—Ä–º—ã
  const saveDraftChanges = async (changedData: Partial<typeof formData>) => {
    if (!tourId || !tour || Object.keys(changedData).length === 0) return
    
    try {
      setAutoSaving(true)
      await updateTourDraft({
        id: tourId as Id<"tours">,
        updates: changedData
      })
      console.log('‚úÖ –ê–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ:', Object.keys(changedData).join(', '))
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è:', error)
    } finally {
      setAutoSaving(false)
    }
  }
  
  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–æ–ª—è –ø—Ä–∏ –ø–æ—Ç–µ—Ä–µ —Ñ–æ–∫—É—Å–∞ - –û–¢–ö–õ–Æ–ß–ï–ù–ê –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
  const saveFieldOnBlur = async (field: string, value: any) => {
    // –û–¢–ö–õ–Æ–ß–ï–ù–û: –∞–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø—Ä–∏ blur –≤—ã–∑—ã–≤–∞–µ—Ç –ª–∞–≥–∏
    // if (!tourId || !tour) return
    // 
    // // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∏–∑–º–µ–Ω–∏–ª–æ—Å—å –ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ
    // const currentValue = (initialFormData as any)[field]
    // if (currentValue === value) return
    // 
    // await saveDraftChanges({ [field]: value })
  }
  
  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ —Ñ–æ—Ä–º–µ
  const checkForChanges = (newFormData: typeof formData) => {
    const changed = JSON.stringify(newFormData) !== JSON.stringify(initialFormData)
    setHasChanges(changed)
    return changed
  }
  
  // –§—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è (–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è –ø–æ –ø—Ä–∏–º–µ—Ä—É —Ä–∞–±–æ—á–∏—Ö —Å–∫—Ä–∏–ø—Ç–æ–≤)
  const uploadImage = async (file: File): Promise<string> => {
    const uploadUrl = await generateUploadUrl()
    const response = await fetch(uploadUrl, {
      method: 'POST',
      headers: { 
        'Content-Type': file.type 
      },
      body: file
    })
    const { storageId } = await response.json()
    return storageId
  }
  
  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –≥–ª–∞–≤–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å –∞–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º
  const handleMainImageSelect = async (e: React.ChangeEvent<HTMLInputElement>) => {
    const file = e.target.files?.[0]
    if (!file) return
    
    setUploading(true)
    try {
      const storageId = await uploadImage(file)
      setMainImage(storageId)
      
      // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –±–∞–∑—É –ø—Ä–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
      if (tourId) {
        await updateTourDraft({
          id: tourId as Id<"tours">,
          updates: { main_image: storageId }
        })
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:', error)
      alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è')
    } finally {
      setUploading(false)
      if (fileInputRef.current) {
        fileInputRef.current.value = ''
      }
    }
  }
  
  // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ —Å –∞–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º
  const updateActivityAndSave = async (dayIndex: number, activityIndex: number, updates: Partial<Activity>) => {
    const updatedDays = [...days]
    updatedDays[dayIndex].activities[activityIndex] = {
      ...updatedDays[dayIndex].activities[activityIndex],
      ...updates
    }
    setDays(updatedDays)
    
    // –ï—Å–ª–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Ç—É—Ä, —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –ë–î
    if (tourId && updatedDays[dayIndex]._id) {
      try {
        await updateTour({
          id: tourId as Id<"tours">,
          days: updatedDays.map(day => ({
            ...day,
            activities: day.activities.map(act => ({
              ...act,
              image: act.image,
              image_url: act.image_url || ''
            }))
          }))
        })
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏:', error)
      }
    }
  }
  
  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ (–ø–æ –∞–Ω–∞–ª–æ–≥–∏–∏ —Å –æ–±–ª–æ–∂–∫–æ–π)
  const handleActivityImageSelect = async (e: React.ChangeEvent<HTMLInputElement>, dayNumber: number, activityOrder: number) => {
    const file = e.target.files?.[0]
    if (!file) return
    
    const activityKey = `${dayNumber}-${activityOrder}`
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ —á—Ç–æ–±—ã —Å—Ä–∞–∑—É –ø–æ–∫–∞–∑–∞—Ç—å –ø—Ä–µ–≤—å—é
    setSelectedActivityImages(prev => ({
      ...prev,
      [activityKey]: file
    }))
    
    // –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É
    setUploadingActivity(activityKey)
    try {
      const storageId = await uploadImage(file)
      
      // –û–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Å –Ω–æ–≤—ã–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º
      const updatedDays = [...days]
      const dayIndex = updatedDays.findIndex(d => d.day_number === dayNumber)
      if (dayIndex !== -1) {
        const activityIndex = updatedDays[dayIndex].activities.findIndex(a => a.order_number === activityOrder)
        if (activityIndex !== -1) {
          updatedDays[dayIndex].activities[activityIndex].image = storageId
          // –¢–∞–∫–∂–µ –æ—á–∏—â–∞–µ–º image_url –µ—Å–ª–∏ –±—ã–ª
          updatedDays[dayIndex].activities[activityIndex].image_url = ''
          setDays(updatedDays)
          
          // –ï—Å–ª–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Ç—É—Ä, —Å—Ä–∞–∑—É —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –ë–î (–∫–∞–∫ —Å –æ–±–ª–æ–∂–∫–æ–π)
          if (tourId && updatedDays[dayIndex]._id) {
            await updateTour({
              id: tourId as Id<"tours">,
              days: updatedDays.map(day => ({
                ...day,
                activities: day.activities.map(act => ({
                  ...act,
                  image: act.image,
                  image_url: act.image_url || ''
                }))
              }))
            })
          } else {
            console.log('‚ö†Ô∏è –ù–µ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –ë–î: tourId:', tourId, 'dayId:', updatedDays[dayIndex]?._id)
          }
        } else {
          console.log('‚ùå –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!')
        }
      } else {
        console.log('‚ùå –î–µ–Ω—å –Ω–µ –Ω–∞–π–¥–µ–Ω!')
      }
      
      // –ü–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ —É–¥–∞–ª—è–µ–º —Ñ–∞–π–ª –∏–∑ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞
      setSelectedActivityImages(prev => {
        const updated = { ...prev }
        delete updated[activityKey]
        return updated
      })
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏:', error)
      alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è')
      // –ü—Ä–∏ –æ—à–∏–±–∫–µ —Ç–æ–∂–µ —É–¥–∞–ª—è–µ–º —Ñ–∞–π–ª –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è
      setSelectedActivityImages(prev => {
        const updated = { ...prev }
        delete updated[activityKey]
        return updated
      })
    } finally {
      setUploadingActivity(null)
      const input = activityFileInputRefs.current[activityKey]
      if (input) {
        input.value = ''
      }
    }
  }
  
  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã
  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault()
    setLoading(true)
    
    try {
      const tourData = {
        ...formData,
        main_image: mainImage || undefined,
        days: days.map(day => ({
          day_number: day.day_number,
          accommodation: day.accommodation,
          auto_distance_km: day.auto_distance_km,
          walk_distance_km: day.walk_distance_km,
          activities: day.activities.map(activity => ({
            name: activity.name,
            description: activity.description,
            type: activity.type,
            time_start: activity.time_start,
            time_end: activity.time_end,
            price: activity.price,
            order_number: activity.order_number,
            is_included: activity.is_included,
            image: activity.image,
            image_url: activity.image_url
          }))
        })),
        included_services: includedServices.filter(s => s.length > 0),
        extra_services: extraServices
          .filter(s => s.name.length > 0 && s.price !== undefined)
          .map(s => ({ name: s.name, price: s.price! }))
      }
      
      // –õ–û–ì–ò–†–û–í–ê–ù–ò–ï: –ø—Ä–æ–≤–µ—Ä—è–µ–º extra_services
      console.log('üî• extra_services –æ—Ç–ø—Ä–∞–≤–ª—è—é—Ç—Å—è:', tourData.extra_services)
      
      if (tourId) {
        await updateTour({
          id: tourId as Id<"tours">,
          ...tourData
        })
        // –ü—Ä–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –æ—Å—Ç–∞–µ–º—Å—è –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
      } else {
        const newTourId = await createTour(tourData)
        // –ü—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –Ω–æ–≤–æ–≥–æ —Ç—É—Ä–∞ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ –µ–≥–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
        if (newTourId) {
          router.push(`/admin/tours/${newTourId}`)
        }
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Ç—É—Ä–∞:', error)
      alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏')
    } finally {
      setLoading(false)
    }
  }
  
  const mainImageUrl = useFileUrl(mainImage)
  
  return (
    <form onSubmit={handleSubmit} className="max-w-7xl mx-auto p-4 sm:p-8">
      <div className="bg-white rounded-3xl shadow-soft p-6 sm:p-8">
        <div className="flex items-center justify-between mb-8">
          <h2 className={typography.heading.page}>
            {tourId ? '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç—É—Ä' : '–°–æ–∑–¥–∞—Ç—å —Ç—É—Ä'}
          </h2>
          {tourId && autoSaving && (
            <div className="flex items-center gap-2 text-sm text-primary bg-primary/10 px-3 py-1 rounded-full">
              <Loader2 className="w-4 h-4 animate-spin" />
              –ê–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ...
            </div>
          )}
        </div>
        
        <div className="space-y-12">
          {/* –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
          <TourBasicInfo
            formData={formData}
            mainImage={mainImageUrl || null}
            uploading={uploading}
            onFormDataChange={setFormData}
            onFieldBlur={saveFieldOnBlur}
            onImageSelect={handleMainImageSelect}
            onImageRemove={() => setMainImage(null)}
            fileInputRef={fileInputRef as any}
            typography={typography}
            forms={forms}
          />
          
          {/* –í–∫–ª—é—á–µ–Ω–æ/–ù–µ –≤–∫–ª—é—á–µ–Ω–æ –≤ —Å—Ç–æ–∏–º–æ—Å—Ç—å */}
          <TourExtras
            includedServices={includedServices}
            extraServices={extraServices}
            onIncludedServicesChange={setIncludedServices}
            onExtraServicesChange={setExtraServices}
            typography={typography}
            forms={forms}
          />
          
          {/* –î–Ω–∏ —Ç—É—Ä–∞ */}
          <TourDays
            days={days}
            onDaysChange={setDays as any}
            onActivityUpdate={updateActivityAndSave}
            uploadingActivity={uploadingActivity}
            selectedActivityImages={selectedActivityImages}
            activityFileInputRefs={activityFileInputRefs}
            onActivityImageSelect={handleActivityImageSelect}
            setSelectedActivityImages={setSelectedActivityImages}
            typography={typography}
            forms={forms}
          />
        </div>
        
      </div>
      
      {/* –ó–∞–ª–∏–ø–∞—é—â–∞—è –ø–∞–Ω–µ–ª—å —Å –∫–Ω–æ–ø–∫–∞–º–∏ */}
      <div className="fixed bottom-0 left-0 right-0 bg-white border-t border-neutral-200 shadow-lg z-50">
        <div className="container-wide max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="flex flex-col sm:flex-row justify-between items-center gap-4 py-4">
            <div className="text-sm text-neutral-600 order-2 sm:order-1">
              {autoSaving && "–ê–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ..."}
            </div>
            <div className="flex gap-3 order-1 sm:order-2 w-full sm:w-auto">
              <button
                type="button"
                onClick={() => router.push('/admin/tours')}
                className="flex-1 sm:flex-none px-6 py-3 border border-neutral-200 rounded-xl hover:bg-neutral-50 transition-colors bg-white"
              >
                <X className="w-5 h-5 inline-block mr-2" />
                –û—Ç–º–µ–Ω–∞
              </button>
              <button
                type="submit"
                disabled={loading}
                className="flex-1 sm:flex-none px-6 py-3 bg-primary text-white rounded-xl hover:bg-primary-dark transition-colors disabled:opacity-50 flex items-center justify-center gap-2"
              >
                {loading ? (
                  <>
                    <Loader2 className="w-5 h-5 animate-spin" />
                    –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ...
                  </>
                ) : (
                  <>
                    <Save className="w-5 h-5" />
                    –°–æ—Ö—Ä–∞–Ω–∏—Ç—å
                  </>
                )}
              </button>
            </div>
          </div>
        </div>
      </div>
      
      {/* –û—Ç—Å—Ç—É–ø –¥–ª—è —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –ø–∞–Ω–µ–ª–∏ */}
      <div className="h-24"></div>
    </form>
  )
}